{"mappings":"+eAAA,IAAAA,EAAAC,EAAA,SCEA,GAC+B,gBAA7BC,OAAOC,SAASC,UACa,cAA7BF,OAAOC,SAASC,UACa,MAA7BF,OAAOC,SAASC,UACa,wBAA7BF,OAAOC,SAASC,SAChB,CACqBC,SAASC,cAAc,SAC/BC,iBAAiB,QAASC,E,CAGpBH,SAASC,cAAc,SAErC,SAASE,EAAqBC,GACnC,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,aAC9C,IAAIH,KAAKC,MAAMC,aAAaC,QAAQ,cACpC,GAEJ,GAC2B,SAAzBL,EAAMM,OAAOC,SACY,WAAzBP,EAAMM,OAAOC,SACY,QAAzBP,EAAMM,OAAOC,SACY,SAAzBP,EAAMM,OAAOC,SACY,QAAzBP,EAAMM,OAAOC,QAEb,OAGF,MAAMC,EAAWR,EAAMM,OAAOG,QAAQ,cAAcC,UAC9CC,EAAcX,EAAMM,OACvBG,QAAQ,cACRZ,cAAc,eAEjB,IAAKW,EAASI,SAAS,0BAA2B,CAChDR,aAAaS,WAAW,YACxB,MAAMC,EAAkB,GAcxB,OAbAb,EAAUc,KAAIC,IACRA,EAAKR,SAASI,SAASD,IAErBK,GACFF,EAAgBG,KAAK,IAAKD,G,SAMD,IAA3BF,EAAgBI,QAClBd,aAAae,QAAQ,WAAYjB,KAAKkB,UAAUN,I,CAKpDb,EAAUgB,KAAK,C,SAAET,IACjBJ,aAAae,QAAQ,WAAYjB,KAAKkB,UAAUnB,G,uBDmBlD,MAAMoB,EAAgBzB,SAASC,cAAc,oBAE7C,IAAIyB,EAAQpB,KAAKC,MAAMC,aAAaC,QAAQ,iBACxCkB,EAAoB,KAUxB,SAASC,EAAcC,GACrB,IACIC,EADOD,EAAKE,MAAK,+CAAgD,GACpDC,MAAM,KAEvB,MADkB,CAACF,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAIG,KAAK,I,CAZnDP,GAGHA,EAAQA,EAAMP,KAAIC,GAAQA,EAAKc,mBAC/BP,EAYF,SAAsCQ,GACpCC,gBAAkBD,EAAUE,MAAK,CAACC,EAAGC,IACnCX,EAAcU,GAAGE,cAAcZ,EAAcW,MAE/C,IAAIE,EAAiB,GACjBC,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAUb,OAAQqB,GAAK,EACX,IAA1BF,EAAenB,QAKfoB,GAAQd,EAAcQ,gBAAgBO,IACxCF,EAAeA,EAAenB,OAAS,GAAGD,KAAKe,gBAAgBO,KAL/DD,EAAOd,EAAcQ,gBAAgBO,IACrCF,EAAepB,KAAK,CAACe,gBAAgBO,MAUzC,OAAOF,C,CA/BaG,CAA6BlB,GACjCC,EAkCLR,KAAI0B,IACb,MAAMC,EAAmBD,EACtB1B,KAAIU,GAAQ,yBAAyBA,WACrCI,KAAK,IACRR,EAAcsB,mBACZ,aACA,+CAA+CnB,EAC7CiB,EAAM,gCACsBC,eAC/B,IA1CHrB,EAAcvB,iBAAiB,SA6CjC,SAA4BE,GAC1B,GAAIA,EAAMM,OAAOsC,UAAUC,SAAS,cAAe,OACnD7C,EAAMM,OAAOwC,YAAYF,UAAUG,OAAO,Y,KApD1C1B,EAAcX,WAAY,EAAAnB,EAAAyD,qB,6EE9E5B,MAAMC,EAAYrD,SAASsD,uBAAuB,iBAElD,IAAKX,EAAI,EAAGA,EAAIU,EAAU/B,OAAQqB,IAChCU,EAAUV,GAAGzC,iBAAiB,SAAS,WACrCqD,KAAKP,UAAUG,OAAO,S","sources":["src/js/read-page.js","src/js/news-card-listner.js","src/js/accordion.js"],"sourcesContent":["import { renderEmptyMarkup } from './fetches';\nimport { onAddToFavoriteClick } from './news-card-listner';\nimport { setEventAfterRender } from './news-card';\nimport { setEventAfterRead } from './news-card';\n// const dateMerkup = document.querySelector('.label');\n// const readList = document.querySelector('.content');\n// const cardsRead = JSON.parse(localStorage.getItem('newsReadMore'));\n// readList.addEventListener('click', onRemoveNewCardToReadClick);\n// if (!cardsRead) {\n//   readList.innerHTML = renderEmptyMarkup();\n// }\n\nfunction renderDate() {\n  const currentDate = new Date(Date.now());\n  const day = currentDate.getDate();\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const year = currentDate.getFullYear();\n  const formattedDate = `${day}.${month}.${year}`;\n  dateMerkup.innerHTML = formattedDate;\n}\n\nfunction renderMarkup() {\n  if (cardsRead) {\n    readList.innerHTML = cardsRead\n      .map(card => `<div class=\"new__card\">${card.newsReadMoreCard}</div>`)\n      .join('');\n  }\n  //renderDate();\n  setEventAfterRender();\n  setEventAfterRead();\n}\n\n//renderMarkup();\n\nfunction onRemoveNewCardToReadClick(event) {\n  onAddToFavoriteClick(event); // функція додавання карток у фейворіт\n  //     event.target.tagName !== 'A'\n  //       ) {\n  //     return;\n  //   }\n  //   const arreyReadCard = JSON.parse(localStorage.getItem('newsReadMore'))\n  //     ? [...JSON.parse(localStorage.getItem('newsReadMore'))]\n  //     : [];\n  //   const linkNewReadCard = event.target\n  //     .closest('.new__card')\n  //     .querySelector('.news__link');\n  // if (arreyReadCard.length !== 0) {\n  //   localStorage.removeItem('newsReadMore');\n  //   const arreyCardSecond = [];\n  //   arreyCard.map(item => {\n  //     if (item.newsReadMore.includes(linkNewReadCard)) {\n  //       return;\n  //     } else {\n  //       if (item) {\n  //         arreyCardSecond.push({ ...item });\n  //       }\n  //     }\n  //   });\n  //     if (arreyCardSecond.length !== 0) {\n  //       localStorage.setItem('newsReadMore', JSON.stringify(arreyCardSecond));\n  //       readList.innerHTML = null;\n  //       readList.insertAdjacentHTML(\n  //         'afterbegin',\n  //         arreyCardSecond\n  //           .map(item => `<div class=\"new__card\">${item.newsReadMore}</div>`)\n  //           .join('')\n  //       );\n  //     } else {\n  //       readList.innerHTML = renderEmptyMarkup();\n  //     }\n  //     return;\n  //   }\n}\nconst containerRead = document.querySelector('.container__read');\n\nlet cards = JSON.parse(localStorage.getItem('newsReadMore'));\nlet arrayForRendering = null;\nif (!cards) {\n  containerRead.innerHTML = renderEmptyMarkup();\n} else {\n  cards = cards.map(item => item.newsReadMoreCard);\n  arrayForRendering = createNewsArraysForRendering(cards);\n  renderMarkupNew(arrayForRendering);\n  containerRead.addEventListener('click', onCurrentDateClick);\n}\n\nfunction getDateOfNews(card) {\n  let test = card.match(/(<p class=\"news__date\">)(\\d{2}-\\d{2}-\\d{4})/)[2];\n  let date1 = test.split('-');\n  let currentDate = [date1[2], date1[1], date1[0]].join('/');\n  return currentDate;\n}\n\nfunction createNewsArraysForRendering(newsArray) {\n  newsArraySorted = newsArray.sort((a, b) =>\n    getDateOfNews(a).localeCompare(getDateOfNews(b))\n  );\n  let arrayForRender = [];\n  let date = 0;\n  for (let i = 0; i < newsArray.length; i += 1) {\n    if (arrayForRender.length === 0) {\n      date = getDateOfNews(newsArraySorted[i]);\n      arrayForRender.push([newsArraySorted[i]]);\n      continue;\n    }\n    if (date == getDateOfNews(newsArraySorted[i])) {\n      arrayForRender[arrayForRender.length - 1].push(newsArraySorted[i]);\n    } else {\n      date = getDateOfNews(newsArraySorted[i]);\n      arrayForRender.push([newsArraySorted[i]]);\n    }\n  }\n  return arrayForRender;\n}\n\nfunction renderMarkupNew(cardsArray) {\n  cardsArray.map(cards => {\n    const cardsArrayByDate = cards\n      .map(card => `<li class=\"new__card\">${card}</li>`)\n      .join('');\n    containerRead.insertAdjacentHTML(\n      'afterbegin',\n      `<div class='accardeon'><p class='read-date'>${getDateOfNews(\n        cards[0]\n      )}</p><ul class='list-news'>${cardsArrayByDate}</ul></div>`\n    );\n  });\n}\nfunction onCurrentDateClick(event) {\n  if (event.target.classList.contains('.read-date')) return;\n  event.target.nextSibling.classList.toggle('is-hidden');\n}\n","// збереження в локалсторедж по кліку на add\n\nif (\n  window.location.pathname === '/index.html' ||\n  window.location.pathname === '/NewsApp/' ||\n  window.location.pathname === '/' ||\n  window.location.pathname === '/NewsApp/index.html'\n) {\n  const divClassNews = document.querySelector('.news');\n  divClassNews.addEventListener('click', onAddToFavoriteClick);\n}\n\nconst divClassNews = document.querySelector('.news');\n\nexport function onAddToFavoriteClick(event) {\n  const arreyCard = JSON.parse(localStorage.getItem('newsCard'))\n    ? [...JSON.parse(localStorage.getItem('newsCard'))]\n    : [];\n\n  if (\n    event.target.tagName !== 'SPAN' &&\n    event.target.tagName !== 'BUTTON' &&\n    event.target.tagName !== 'svg' &&\n    event.target.tagName !== 'path' &&\n    event.target.tagName !== 'use'\n  ) {\n    return;\n  }\n\n  const newsCard = event.target.closest('.new__card').innerHTML;\n  const linkNewCArd = event.target\n    .closest('.new__card')\n    .querySelector('.news__link');\n\n  if (!newsCard.includes('news__addbtn is-hidden')) {\n    localStorage.removeItem('newsCard');\n    const arreyCardSecond = [];\n    arreyCard.map(item => {\n      if (item.newsCard.includes(linkNewCArd)) {\n      } else {\n        if (item) {\n          arreyCardSecond.push({ ...item });\n        }\n        return;\n      }\n    });\n\n    if (arreyCardSecond.length !== 0) {\n      localStorage.setItem('newsCard', JSON.stringify(arreyCardSecond));\n    }\n    return;\n  }\n\n  arreyCard.push({ newsCard });\n  localStorage.setItem('newsCard', JSON.stringify(arreyCard));\n}\n","const accordion = document.getElementsByClassName('container-box');\n\nfor (i = 0; i < accordion.length; i++) {\n  accordion[i].addEventListener('click', function () {\n    this.classList.toggle('active');\n  });\n}\n"],"names":["$drJjU","parcelRequire","window","location","pathname","document","querySelector","addEventListener","$aa7221c39a3903a4$export$535d209b4ec95c93","event","arreyCard","JSON","parse","localStorage","getItem","target","tagName","newsCard","closest","innerHTML","linkNewCArd","includes","removeItem","arreyCardSecond","map","item","push","length","setItem","stringify","$6fc108d3007f1d8e$var$containerRead","$6fc108d3007f1d8e$var$cards","$6fc108d3007f1d8e$var$arrayForRendering","$6fc108d3007f1d8e$var$getDateOfNews","card","date1","match","split","join","newsReadMoreCard","newsArray","newsArraySorted","sort","a","b","localeCompare","arrayForRender","date","i","$6fc108d3007f1d8e$var$createNewsArraysForRendering","cards1","cardsArrayByDate","insertAdjacentHTML","classList","contains","nextSibling","toggle","renderEmptyMarkup","$1f144ad68bc411c7$var$accordion","getElementsByClassName","this"],"version":3,"file":"read.efb3e21e.js.map"}